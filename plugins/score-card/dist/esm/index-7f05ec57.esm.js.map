{"version":3,"file":"index-7f05ec57.esm.js","sources":["../../src/components/ScoreCardTable/ScoreCardTable.tsx","../../src/components/ScoreCardPage/ScoreCardPage.tsx"],"sourcesContent":["import React from 'react';\nimport { Table, TableColumn, Progress, Link } from '@backstage/core-components';\nimport Alert from '@material-ui/lab/Alert';\nimport { useAsync } from 'react-use';\nimport { configApiRef, useApi } from '@backstage/core-plugin-api';\nimport { SystemScore } from '../../types/SystemScore';\nimport { scoreToColorConverter } from '../../helpers/scoreToColorConverter';\nimport { CSSProperties } from '@material-ui/core/styles/withStyles';\n\ntype ScoreTableProps = {\n  scores: SystemScore[];\n};\n\nexport const ScoreTable = ({ scores }: ScoreTableProps) => {\n  const columns: TableColumn<SystemScore>[] = [\n    { title: 'Name', field: 'systemEntityName', render: (systemScore) => (\n      <Link to={`/catalog/default/system/${systemScore.systemEntityName}/score`} >{systemScore.systemEntityName}</Link>\n      //this would be better but it cant link to \"/score\" <EntityRefLink entityRef={{\n      //   kind: 'System',\n      //   namespace: 'default',\n      //   name: systemScore.systemEntityName,        \n      // }} defaultKind={'System'} /> \n    ), },\n    { title: 'Date', field: 'generatedDateTimeUtc' },\n    { title: '%', field: 'scorePercent' },\n  ];\n\n\n  const rowStyleFunc = (rowData: SystemScore) : CSSProperties => ({\n    color: scoreToColorConverter(rowData?.scoreSuccess)\n  })\n\n  return (\n    <Table<SystemScore>\n      title=\"System scores overview\"\n      options={{ search: true, paging: true, rowStyle: rowStyleFunc }}\n      columns={columns}\n      data={scores}\n    />\n  );\n};\n\nexport const ScoreCardTable = () => {\n  const configApi = useApi(configApiRef);\n  const jsonDataUrl = configApi.getOptionalString('scorecards.jsonDataUrl') ?? 'https://unknown-url-please-configure';\n\n  const { value, loading, error } = useAsync(async (): Promise<SystemScore[]> => {\n    const urlWithData = `${jsonDataUrl}all.json`;\n    const result: SystemScore[] = await fetch(urlWithData).then(res => {\n      switch (res.status) {\n        case 404:\n          return null;\n        case 200:\n          return res.json();\n        default:\n          throw `error from server (code ${res.status})`;\n      }\n    });\n    return result;\n  }, []);\n\n  if (loading) {\n    return <Progress />;\n  } else if (error) {\n    return <Alert severity=\"error\">{error.message}</Alert>;\n  }\n\n  return <ScoreTable scores={value || []} />;\n};\n","import React from 'react';\nimport { Grid } from '@material-ui/core';\nimport {\n  Header,\n  Page,\n  Content,\n  ContentHeader,\n  HeaderLabel,\n  SupportButton,\n} from '@backstage/core-components';\nimport { ScoreCardTable } from '../ScoreCardTable';\n\nexport const ScoreCardPage = () => (\n  <Page themeId=\"tool\">\n    <Header title=\"Score board\" subtitle=\"Overview of system scores\">\n      <HeaderLabel label=\"Owner\" value=\"Platform&amp;Tooling team\" />\n      <HeaderLabel label=\"Lifecycle\" value=\"Alpha\" />\n    </Header>\n    <Content>\n      <ContentHeader title=\"\">\n        <SupportButton>In this table you may see overview of system scores.</SupportButton>\n      </ContentHeader>\n      <Grid container spacing={3} direction=\"column\">\n        <Grid item>\n          <ScoreCardTable />\n        </Grid>\n      </Grid>\n    </Content>\n  </Page>\n);\n"],"names":["Alert"],"mappings":";;;;;;;;;MAaa,aAAa,CAAC,CAAE,YAA8B;AACzD,QAAM,UAAsC;AAAA,IAC1C,CAAE,OAAO,QAAQ,OAAO,oBAAoB,QAAQ,CAAC,oDAClD,MAAD;AAAA,MAAM,IAAI,2BAA2B,YAAY;AAAA,OAA4B,YAAY;AAAA,IAO3F,CAAE,OAAO,QAAQ,OAAO;AAAA,IACxB,CAAE,OAAO,KAAK,OAAO;AAAA;AAIvB,QAAM,eAAe,CAAC;AAA0C,IAC9D,OAAO,sBAAsB,mCAAS;AAAA;AAGxC,6CACG,OAAD;AAAA,IACE,OAAM;AAAA,IACN,SAAS,CAAE,QAAQ,MAAM,QAAQ,MAAM,UAAU;AAAA,IACjD;AAAA,IACA,MAAM;AAAA;AAAA;MAKC,iBAAiB,MAAM;AA1CpC;AA2CE,QAAM,YAAY,OAAO;AACzB,QAAM,cAAc,gBAAU,kBAAkB,8BAA5B,YAAyD;AAE7E,QAAM,CAAE,OAAO,SAAS,SAAU,SAAS,YAAoC;AAC7E,UAAM,cAAc,GAAG;AACvB,UAAM,SAAwB,MAAM,MAAM,aAAa,KAAK,SAAO;AACjE,cAAQ,IAAI;AAAA,aACL;AACH,iBAAO;AAAA,aACJ;AACH,iBAAO,IAAI;AAAA;AAEX,gBAAM,2BAA2B,IAAI;AAAA;AAAA;AAG3C,WAAO;AAAA,KACN;AAEH,MAAI,SAAS;AACX,+CAAQ,UAAD;AAAA,aACE,OAAO;AAChB,+CAAQA,SAAD;AAAA,MAAO,UAAS;AAAA,OAAS,MAAM;AAAA;AAGxC,6CAAQ,YAAD;AAAA,IAAY,QAAQ,SAAS;AAAA;AAAA;;MCvDzB,gBAAgB,0CAC1B,MAAD;AAAA,EAAM,SAAQ;AAAA,uCACX,QAAD;AAAA,EAAQ,OAAM;AAAA,EAAc,UAAS;AAAA,uCAClC,aAAD;AAAA,EAAa,OAAM;AAAA,EAAQ,OAAM;AAAA,wCAChC,aAAD;AAAA,EAAa,OAAM;AAAA,EAAY,OAAM;AAAA,yCAEtC,SAAD,0CACG,eAAD;AAAA,EAAe,OAAM;AAAA,uCAClB,eAAD,MAAe,8FAEhB,MAAD;AAAA,EAAM,WAAS;AAAA,EAAC,SAAS;AAAA,EAAG,WAAU;AAAA,uCACnC,MAAD;AAAA,EAAM,MAAI;AAAA,uCACP,gBAAD;;;;"}