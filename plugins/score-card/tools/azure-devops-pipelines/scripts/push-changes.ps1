<#
.SYNOPSIS
    Pushes changed to git repo if any

#>
[CmdLetBinding()]
param(
    [Parameter(Mandatory = $true)]
    [string]
    $autogeneratedDefinitionsFolder,

    [Parameter(Mandatory = $true)]
    [string]
    $outputFile
)
$ErrorActionPreference = 'Stop';

Write-host "Commit changes and pushing to remote..." -ForegroundColor Gray;

$currentUserEmail = & git config user.email;
if ($null -eq $currentUserEmail) {
    Write-host "Git user.email empty, setting up a 'service' one..." -ForegroundColor DarkGray;
    & git config user.email "pipeline@oriflame.com";
}

$currentUserName = & git config user.name;
if ($null -eq $currentUserName) {
    Write-host "Git user.name empty, setting up a 'service' one..." -ForegroundColor DarkGray;
    & git config user.name "(Pipeline Automation)";
}

$changesDetected = $false;

Write-host "Git status:" -ForegroundColor DarkGray;
& git status

Write-host "Branch:" -ForegroundColor DarkGray;
& git branch

Write-host "Checking [$outputFile]..." -ForegroundColor DarkGray;
$gitstatus = & git status -s -- $outputFile;
if ($null -ne $gitstatus)
{
    Write-host "$outputFile changes detected. Auto-commit..." -ForegroundColor DarkGray;
    & git add -- $outputFile;
    & git commit -m "resouces.yaml autocommit [skip ci]" $outputFile;
    $changesDetected = $true;
}

Write-host "Checking [$autogeneratedDefinitionsFolder]..." -ForegroundColor DarkGray;
$gitstatus = & git status -s -- $autogeneratedDefinitionsFolder;
if ($null -ne $gitstatus)
{
    Write-host "$autogeneratedDefinitionsFolder changes detected. Auto-commit..." -ForegroundColor DarkGray;
    & git add -- $autogeneratedDefinitionsFolder;
    & git commit -m "backstage/* autocommit [skip ci]" -- $autogeneratedDefinitionsFolder;
    $changesDetected = $true;
}

if ($changesDetected) {
    Write-host "Pushing changes to remote..." -ForegroundColor DarkGray;
    & git push --quiet;
} else {
    Write-host "No changes detected..." -ForegroundColor DarkGray;    
}

Write-host "...done" -ForegroundColor Gray
